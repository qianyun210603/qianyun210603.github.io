<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>书剑阁</title>
  
  <subtitle>技术の记录本</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2022-10-15T08:57:55.827Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>BookSword</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>修复MongoDB设置导致mongod无法启动</title>
    <link href="http://yoursite.com/2022/10/15/%E4%BF%AE%E5%A4%8Dmongodb%E8%AE%BE%E7%BD%AE%E5%AF%BC%E8%87%B4mongod%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8/"/>
    <id>http://yoursite.com/2022/10/15/修复mongodb设置导致mongod无法启动/</id>
    <published>2022-10-15T08:04:00.000Z</published>
    <updated>2022-10-15T08:57:55.827Z</updated>
    
    <content type="html"><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>为了解决使用Arctic<a href="https://github.com/man-group/arctic" target="_blank" rel="noopener">^fn1</a>MongoDB的日志里出现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[conn2] SASL SCRAM-SHA-1 authentication failed for myAdminUser on admin from client 192.168.3.100:9560 ; UserNotFound: Could not find user &quot;myAdminUser&quot; for db &quot;admin&quot;</span><br></pre></td></tr></table></figure></p><p>错误的问题，参考了数个连接（包括StackOverflow）<a href="https://stackoverflow.com/questions/29006887/mongodb-cr-authentication-failed" target="_blank" rel="noopener">^fn2</a>，都提示要将<code>authSchema.currentVersion</code>从<code>5</code>改成<code>3</code>。照做以后就杯具了，<code>mongod</code>服务完全打不开了，提示错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This server is using MONGODB-CR, an authentication mechanism which has been removed from MongoDB 4.0. In order to upgrade the auth schema, first downgrade MongoDB binaries to version 3.6 and then run the authSchemaUpgrade command. See http://dochub.mongodb.org/core/3.0-upgrade-to-scram-sha-1</span><br></pre></td></tr></table></figure></p><p>原因是我的MongoDB server是4.2版本，<code>authSchema.currentVersion=3</code>代表MONGODB-CR的认证方式，4.0以上的Mongo Server已经不再支持了。</p><font color="red"><br><em>感觉MongoDB这种设计简直愚蠢反人类到家了，这种能导致启动崩溃的设置居然是写在数据库里而不是独立的配置文件里，直接导致万一设错了服务就完全起不来，服务器起不来又无法更正配置，直接死循环了。</em><br><br>*!!!所以，尽量不要更改数据库里的配置，一定需要改的话，改之前一定要备份。!!!<br></font><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><h4 id="失败尝试一"><a href="#失败尝试一" class="headerlink" title="失败尝试一"></a>失败尝试一</h4><p>按照日志里的提示，将MongoDB服务的版本降低到3.6，同样无法启动，提示WeirdTiger格式不兼容。顿时感觉天昏地暗，前一个备份已经两周多了，完全不想重新恢复这两周的所有数据。</p><h4 id="灵机一动的尝试二"><a href="#灵机一动的尝试二" class="headerlink" title="灵机一动的尝试二"></a>灵机一动的尝试二</h4><p>想到我按照<a href="https://stackoverflow.com/questions/29006887/mongodb-cr-authentication-failed" target="_blank" rel="noopener">^fn2</a>的修改既然是存在数据库里的，那么必然改了某个数据库的磁盘文件。那么这个文件的修改日期一定是所有数据库数据文件中最新的。于是赶紧<code>cd</code>去数据库文件在磁盘里的目录，<code>ls -lnt</code>找到最后修改的文件是这个<code>collection-0-5610079802494816593.wt</code>。</p><p>用vim打卡，<code>:%!xxd</code>切换到二进制模式，搜索<code>authSchema</code>，果然找到了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">00005070: 6400 0b00 0000 6175 7468 5363 6865 6d61  d.....authSchema</span><br><span class="line">00005080: 0010 6375 7272 656e 7456 6572 7369 6f6e  ..currentVersion</span><br><span class="line">00005090: 0003 0000 0000 0000 0000 0000 0000 0000  ................</span><br></pre></td></tr></table></figure></p><p>赶紧把<code>currentVersion</code>后边的0003改成0005。再次重启<code>mongod</code>。发现日志还是报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wiredTiger Error: collection-*.wt does not appear to be a WiredTiger file</span><br></pre></td></tr></table></figure><p>并提示可以加<code>--repair</code>参数尝试修复，于是执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod --noauth --dbpath /mongodb/data/ --repair</span><br></pre></td></tr></table></figure></p><p>成功结束后再次启动mongod服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mongod</span><br></pre></td></tr></table></figure></p><p>成功~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;缘起&quot;&gt;&lt;a href=&quot;#缘起&quot; class=&quot;headerlink&quot; title=&quot;缘起&quot;&gt;&lt;/a&gt;缘起&lt;/h2&gt;&lt;p&gt;为了解决使用Arctic&lt;a href=&quot;https://github.com/man-group/arctic&quot; target=&quot;_bla
      
    
    </summary>
    
      <category term="Programming" scheme="http://yoursite.com/categories/Programming/"/>
    
      <category term="MongoDB" scheme="http://yoursite.com/categories/Programming/MongoDB/"/>
    
    
  </entry>
  
  <entry>
    <title>消除&amp;lt;frozen importlib._bootstrap&amp;gt;:228: RuntimeWarning: scipy._lib.messagestream.MessageStream size changed, may indicate binary incompatibility.</title>
    <link href="http://yoursite.com/2022/10/01/2022-10-01-%E6%B6%88%E9%99%A4-frozen-importlib-bootstrap-228-runtimewarning-scipy-lib-messagestream-messagestream-size-changed-may-indicate-binary-incompatibility/"/>
    <id>http://yoursite.com/2022/10/01/2022-10-01-消除-frozen-importlib-bootstrap-228-runtimewarning-scipy-lib-messagestream-messagestream-size-changed-may-indicate-binary-incompatibility/</id>
    <published>2022-10-01T06:08:00.000Z</published>
    <updated>2022-10-01T08:54:07.852Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在<code>import scipy.stats</code>的时候报警告：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.9</span><span class="number">.12</span> (main, Apr  <span class="number">5</span> <span class="number">2022</span>, <span class="number">06</span>:<span class="number">56</span>:<span class="number">58</span>)</span><br><span class="line">[GCC <span class="number">7.5</span><span class="number">.0</span>] :: Anaconda, Inc. on linux</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> <span class="keyword">or</span> <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> percentileofscore</span><br><span class="line">&lt;frozen importlib._bootstrap&gt;:<span class="number">228</span>: RuntimeWarning: scipy._lib.messagestream.MessageStream size changed, may indicate binary incompatibility. Expected <span class="number">56</span> <span class="keyword">from</span> C header, got <span class="number">64</span> <span class="keyword">from</span> PyObject</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>exit()</span><br></pre></td></tr></table></figure></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>这个的原因之一是pip在升级numpy，scipy的时候(<code>pip install -U numpy scipy</code>)，对旧的package的删除可能不干净的问题。需要多次用<code>uninstall</code>直至无残留：</p><p>以numpy为例<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">(base) $ pip uninstall numpy</span><br><span class="line">Found existing installation: numpy 1.23.3</span><br><span class="line">Uninstalling numpy-1.23.3:</span><br><span class="line">  Would remove:</span><br><span class="line">    /anaconda3/bin/f2py</span><br><span class="line">    /anaconda3/bin/f2py3</span><br><span class="line">    /anaconda3/bin/f2py3.9</span><br><span class="line">    /anaconda3/lib/python3.9/site-packages/numpy-1.23.3.dist-info/*</span><br><span class="line">    /anaconda3/lib/python3.9/site-packages/numpy.libs/libgfortran-040039e1.so.5.0.0</span><br><span class="line">    /anaconda3/lib/python3.9/site-packages/numpy.libs/libopenblas64_p-r0-742d56dc.3.20.so</span><br><span class="line">    /anaconda3/lib/python3.9/site-packages/numpy.libs/libquadmath-96973f99.so.0.0.0</span><br><span class="line">    /anaconda3/lib/python3.9/site-packages/numpy/*</span><br><span class="line">  Would not remove (might be manually added):</span><br><span class="line">    /anaconda3/lib/python3.9/site-packages/numpy/distutils/site.cfg</span><br><span class="line">Proceed (Y/n)? y</span><br><span class="line">  Successfully uninstalled numpy-1.23.3</span><br><span class="line">(base) $ pip install numpy</span><br><span class="line">Requirement already satisfied: numpy <span class="keyword">in</span> /anaconda3/lib/python3.9/site-packages (1.21.5)</span><br><span class="line">(base) $ pip uninstall numpy</span><br><span class="line">Found existing installation: numpy 1.21.5</span><br><span class="line">Uninstalling numpy-1.21.5:</span><br><span class="line">  Would remove:</span><br><span class="line">    /anaconda3/lib/python3.9/site-packages/numpy-1.21.5.dist-info/*</span><br><span class="line">    /anaconda3/lib/python3.9/site-packages/numpy/distutils/site.cfg</span><br><span class="line">Proceed (Y/n)? y</span><br><span class="line">  Successfully uninstalled numpy-1.21.5</span><br></pre></td></tr></table></figure></p><p>可见在重新安装的时候，发现卸载掉1.23.3后，残余的1.21.5暴露出来了。所以需要再次卸载，直至完全卸载干净。</p><p>对scipy也是同样操作。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;import scipy.stats&lt;/code&gt;的时候报警告：&lt;br&gt;&lt;figure class=&quot;highlight py
      
    
    </summary>
    
      <category term="Programming" scheme="http://yoursite.com/categories/Programming/"/>
    
      <category term="Python" scheme="http://yoursite.com/categories/Programming/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 22.04安装MongoDB 4.2</title>
    <link href="http://yoursite.com/2022/09/26/2022-09-26-ubuntu-22-04_install_mongodb-4-2/"/>
    <id>http://yoursite.com/2022/09/26/2022-09-26-ubuntu-22-04_install_mongodb-4-2/</id>
    <published>2022-09-26T01:52:00.000Z</published>
    <updated>2022-09-26T10:32:03.472Z</updated>
    
    <content type="html"><![CDATA[<p>问题在于Ubuntu 22.04开始移除了libssl1.1的支持。所以需要先安装libssl1.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.0g-2ubuntu4_amd64.deb</span><br><span class="line">sudo dpkg -i libssl1.1_1.1.</span><br></pre></td></tr></table></figure><p>然后将18.04 boinic的source加入source list<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse"</span> | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list</span><br></pre></td></tr></table></figure></p><p>更新apt并安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install -y mongodb-org</span><br></pre></td></tr></table></figure></p><h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ol><li><a href="https://askubuntu.com/questions/1403619/mongodb-install-fails-on-ubuntu-22-04-depends-on-libssl1-1-but-it-is-not-insta" target="_blank" rel="noopener">https://askubuntu.com/questions/1403619/mongodb-install-fails-on-ubuntu-22-04-depends-on-libssl1-1-but-it-is-not-insta</a></li><li><a href="https://www.mongodb.com/community/forums/t/installing-mongodb-over-ubuntu-22-04/159931/39" target="_blank" rel="noopener">https://www.mongodb.com/community/forums/t/installing-mongodb-over-ubuntu-22-04/159931/39</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;问题在于Ubuntu 22.04开始移除了libssl1.1的支持。所以需要先安装libssl1.1&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;lin
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>AVS合并视频文件</title>
    <link href="http://yoursite.com/2018/10/02/avs-merge-wmv/"/>
    <id>http://yoursite.com/2018/10/02/avs-merge-wmv/</id>
    <published>2018-10-02T06:55:46.000Z</published>
    <updated>2018-10-02T07:11:27.565Z</updated>
    
    <content type="html"><![CDATA[<p>　　常用的视频压制软件，如MeGUI、小丸工具箱等都不支持直接合并视频。所以只能通过AVS脚本实现。但直接用工具生成的脚本压制后会有音画不同步问题。这里分享一种网上找到的办法，可以基本保证合并并压制出没有明显瑕疵的视频。<br>　　基本思路就是音画分别压制，视频部分用MeGUI自带的Avs Script Creator，生成后合并到一个文件里：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">LoadPlugin(&quot;E:\MediaTools\MeGUI-2715-32\tools\lsmash\LSMASHSource.dll&quot;)</span><br><span class="line">LoadPlugin(&quot;E:\MediaTools\MeGUI-2715-32\tools\ffms\ffms2.dll&quot;)</span><br><span class="line">A=FFVideoSource(&quot;F:\JDownloader\Downloads\A.wmv&quot;, fpsnum=30, fpsden=1, threads=1)</span><br><span class="line">B=FFVideoSource(&quot;F:\JDownloader\Downloads\B.wmv&quot;, fpsnum=30, fpsden=1, threads=1)</span><br><span class="line">C=FFVideoSource(&quot;F:\JDownloader\Downloads\C.wmv&quot;, fpsnum=30, fpsden=1, threads=1)</span><br><span class="line">D=FFVideoSource(&quot;F:\JDownloader\Downloads\D.wmv&quot;, fpsnum=30, fpsden=1, threads=1)</span><br><span class="line">A+B+C+D</span><br><span class="line">#deinterlace</span><br><span class="line">#crop</span><br><span class="line"></span><br><span class="line">LanczosResize(848,480) # Lanczos (Sharp)</span><br><span class="line">#denoise</span><br></pre></td></tr></table></figure></p><p>音频部分直接用DirectShowSource，并强制帧率，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A = DirectShowSource(&quot;F:\JDownloader\Downloads\A.wmv&quot;, fps=30.000, audio=true, convertfps=true)</span><br><span class="line">B = DirectShowSource(&quot;F:\JDownloader\Downloads\B.wmv&quot;, fps=30.000, audio=true, convertfps=true)</span><br><span class="line">C = DirectShowSource(&quot;F:\JDownloader\Downloads\C.wmv&quot;, fps=30.000, audio=true, convertfps=true)</span><br><span class="line">D = DirectShowSource(&quot;F:\JDownloader\Downloads\D.wmv&quot;, fps=30.000, audio=true, convertfps=true)</span><br><span class="line">A+B+C+D</span><br></pre></td></tr></table></figure></p><p>有个问题是MeGUI的x264似乎有些问题，所以这里视频要用小丸压，音频用MeGUI。最后用MeGUI的MP4Box做混流。<br>　　不是很完美的解决方案，有些麻烦，不过可以达到目的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;　　常用的视频压制软件，如MeGUI、小丸工具箱等都不支持直接合并视频。所以只能通过AVS脚本实现。但直接用工具生成的脚本压制后会有音画不同步问题。这里分享一种网上找到的办法，可以基本保证合并并压制出没有明显瑕疵的视频。&lt;br&gt;　　基本思路就是音画分别压制，视频部分用MeG
      
    
    </summary>
    
      <category term="视频压制" scheme="http://yoursite.com/categories/%E8%A7%86%E9%A2%91%E5%8E%8B%E5%88%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux Mint某些程序无法使用fcitx的输入法</title>
    <link href="http://yoursite.com/2018/07/29/Linux-fcitx-input-method-cannot-use/"/>
    <id>http://yoursite.com/2018/07/29/Linux-fcitx-input-method-cannot-use/</id>
    <published>2018-07-29T04:59:32.000Z</published>
    <updated>2018-07-29T05:10:24.853Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>　　安装了GoldenDict结果发现无法在搜索框里输入中文和日文。</p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>　　安装Qt5版本的fcitx前端：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install fcitx-frontend-qt5</span><br></pre></td></tr></table></figure></p><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>　　Linux下这点比较麻烦，输入法的UI框架有时需要和应用程序的UI框架一致才能启动。一般输入法都会有gtk+ 2/3，Qt 4/5等不同的前端。如果对于某个桌面应用输入法无法使用，需要先确定该应用是基于哪个UI框架的，再检查输入法该UI框架的前端有没有安装。如果没有安装，一般安装后即可解决问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h4&gt;&lt;p&gt;　　安装了GoldenDict结果发现无法在搜索框里输入中文和日文。&lt;/p&gt;
&lt;h4 id=&quot;解决&quot;&gt;&lt;a href=&quot;#解决&quot; class
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux Mint 19安装Cuda 9.2以及cuDNN、NCCL</title>
    <link href="http://yoursite.com/2018/07/14/cuda-9-2-installation-on-Linux-mint-19/"/>
    <id>http://yoursite.com/2018/07/14/cuda-9-2-installation-on-Linux-mint-19/</id>
    <published>2018-07-14T09:49:25.000Z</published>
    <updated>2018-07-14T10:44:44.723Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CUDA"><a href="#CUDA" class="headerlink" title="CUDA"></a>CUDA</h3><p>系统升级到了Mint 19需要重新安装配置Cuda，同时升级到Cuda 9.2。Cuda 9.2需要Nvidia的驱动版本至少是396.37，但不幸的是apt仓库里的396版本驱动有问题，安装后无法被内核加载从而导致系统运行在软解状态。因此只好用bin文件安装。步骤如下：</p><ol><li><p>去官网下载Cuda 9.2的bin安装文件，注意里面自带驱动所以不需要单独安装驱动。<br><img src="/2018/07/14/cuda-9-2-installation-on-Linux-mint-19/downloadconfig.png" alt=""></p></li><li><p>按<code>Ctrl+Alt+F2</code>进入命令行模式，登录并<code>sudo -i</code>切换到root用户。</p></li><li><p>将之前安装的Nvidia驱动卸载掉以避免冲突。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt purge nvidia-396 nvidia-modprobe nvidia-settings</span><br><span class="line">apt autoremove</span><br></pre></td></tr></table></figure></li><li><p>停止X桌面服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/lightdm stop</span><br></pre></td></tr></table></figure></li><li><p>给下载的run文件加执行权限，并运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x cuda_9.2.148_396.37_linux.run</span><br><span class="line">./cuda_9.2.148_396.37_linux.run</span><br></pre></td></tr></table></figure></li></ol><p>按提示操作。问yes/no的问题都选yes。</p><ol start="6"><li><p>安装完成后重启。</p></li><li><p>将cuda加入系统路径中：<br>在<code>/etc/profile</code>文件中加入如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/usr/local/cuda/bin:$PAT</span><br></pre></td></tr></table></figure></li><li><p>安装cuda示例所需依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libgl-dev libglu-dev libx11-dev libegl1-mesa-dev libgles2-mesa-dev libmpich-dev</span><br></pre></td></tr></table></figure></li><li><p>将cuda示例的所有者从root改为当前用户(默认情况示例会被自动安装在sudo用户的<code>$HOME</code>下)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R booksword:booksword NVIDIA_CUDA-9.2_Samples/</span><br></pre></td></tr></table></figure></li><li><p>编译示例。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># force input macro value as linux mint is not officially supported</span></span><br><span class="line">GLPATH=<span class="string">"/usr/lib/x86_64-linux-gnu"</span> GLLINK=<span class="string">"-L/usr/lib/x86_64-linux-gnu"</span> DFLT_PATH=<span class="string">"/usr/lib"</span> EGLLIB=<span class="string">"/usr/lib/x86_64-linux-gnu"</span> GLESLIB=<span class="string">"/usr/lib/x86_64-linux-gnu"</span> make -j6</span><br></pre></td></tr></table></figure></li></ol><h3 id="cuDNN"><a href="#cuDNN" class="headerlink" title="cuDNN"></a>cuDNN</h3><p>首先从<a href="https://developer.nvidia.com/rdp/cudnn-download" target="_blank" rel="noopener">官网</a>下载cudnn的deb文件:</p><ul><li>cuDNN v7.1.4 Runtime Library for Ubuntu16.04 (Deb)</li><li>cuDNN v7.1.4 Developer Library for Ubuntu16.04 (Deb)</li><li>cuDNN v7.1.4 Code Samples and User Guide for Ubuntu16.04 (Deb)</li></ul><p>然后安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i libcudnn7_7.1.4.18-1+cuda9.2_amd64.deb</span><br><span class="line">dpkg -i libcudnn7-dev_7.1.4.18-1+cuda9.2_amd64.deb</span><br><span class="line">dpkg -i libcudnn7-doc_7.1.4.18-1+cuda9.2_amd64.deb</span><br></pre></td></tr></table></figure></p><p>安装完成后编译运行官方测试用例以验证安装：<br>将<code>/usr/src/cudnn_samples_v7/</code>复制到有写权限的目录下，并编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> cudnn_samples_v7/mnistCUDNN/</span><br><span class="line">make</span><br></pre></td></tr></table></figure></p><h3 id="NCCL"><a href="#NCCL" class="headerlink" title="NCCL"></a>NCCL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i nccl-repo-ubuntu1604-2.2.13-ga-cuda9.2_1-1_amd64.deb</span><br></pre></td></tr></table></figure><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><blockquote><p>官网文档</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CUDA&quot;&gt;&lt;a href=&quot;#CUDA&quot; class=&quot;headerlink&quot; title=&quot;CUDA&quot;&gt;&lt;/a&gt;CUDA&lt;/h3&gt;&lt;p&gt;系统升级到了Mint 19需要重新安装配置Cuda，同时升级到Cuda 9.2。Cuda 9.2需要Nvidia的驱动版本至
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
      <category term="Cuda" scheme="http://yoursite.com/categories/Linux/Cuda/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux Mint从18.3升级到19</title>
    <link href="http://yoursite.com/2018/07/12/Upgrade-to-linux-mint-19-from-18-3/"/>
    <id>http://yoursite.com/2018/07/12/Upgrade-to-linux-mint-19-from-18-3/</id>
    <published>2018-07-12T10:54:37.000Z</published>
    <updated>2018-07-12T11:25:13.352Z</updated>
    
    <content type="html"><![CDATA[<p>#####一、检查升级需求是否满足</p><ol><li><p>只有Linux Mint 18.3 Cinnamon，MATE和Xfce版本可以用升级包升级。</p><ul><li>使用18、18.1、18.2的需要先用Update Manager升级到18.3。</li></ul></li><li><p>使用Timeshift保存一个系统镜像。</p><ul><li>使用<code>apt install timeshift</code>安装Timeshift。</li><li>进入”Menu -&gt; Administration -&gt; Timeshift”打开Timeshift。</li><li>按提示创建镜像并设置自动创建频率，一切按默认选项即可。</li></ul></li><li><p>确定当前X Display Manager是LightDM。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/X11/default-display-manager</span><br></pre></td></tr></table></figure></li></ol><ul><li>如果得到<code>/usr/sbin/lightdm</code>，满足条件。</li><li>如果是<code>/usr/sbin/mdm</code>，则需要切换到LightDM。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install lightdm lightdm-settings slick-greeter # 要求选择LDM或MDM时选择LDM</span><br><span class="line">sudo apt remove --purge mdm mint-mdm-themes*</span><br><span class="line">sudo dpkg-reconfigure lightdm</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure></li></ul><h4 id="升级步骤"><a href="#升级步骤" class="headerlink" title="升级步骤"></a>升级步骤</h4><ol><li><p>更新现有Linux Mint 18.3系统。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure></li><li><p>设置终端可以滚动无限多行以方便在失败后通过输出查找原因。<br>打开终端，在”Edit”菜单中”Profile Preferences”中”Scrolling”选项卡，把“Limit scrollback to XX lines”前面的复选框去掉。 </p></li><li><p>安装升级工具。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install mintupgrade</span><br></pre></td></tr></table></figure></li><li><p>检查安装<br>使用<code>mintupgrade check</code>命令模拟升级，遵照显示的说明。此命令临时将系统指向Linux Mint 19并估计升级会带来的影响，但不会真执行升级操作所以不会对现有系统造成任何影响。如果检查过程中显示有软件包有冲突，用<code>apt purge</code>命令删除掉该软件包并记下包名，此外也要注意记录重要但会在升级时被自动删除掉的包，以备升级成功后重新安装。<br>重复执行本步骤直至输出符合预期（意味着没有冲突和重要的包会受到升级影响）。</p></li><li><p>下载更新并按装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mintupgrade download</span><br><span class="line">mintupgrade upgrade</span><br></pre></td></tr></table></figure></li></ol><h5 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h5><blockquote><ul><li><a href="https://community.linuxmint.com/tutorial/view/2416" target="_blank" rel="noopener">How to upgrade to Linux Mint 19</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#####一、检查升级需求是否满足&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;只有Linux Mint 18.3 Cinnamon，MATE和Xfce版本可以用升级包升级。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用18、18.1、18.2的需要先用Update Manager升级到18.3。&lt;
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux系统下多Nvidia显卡超频</title>
    <link href="http://yoursite.com/2018/07/10/Linux-multi-graphic-card-overclock/"/>
    <id>http://yoursite.com/2018/07/10/Linux-multi-graphic-card-overclock/</id>
    <published>2018-07-10T11:56:58.000Z</published>
    <updated>2018-07-10T12:15:54.317Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>安装驱动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install nvidia-384 nvidia-384-dev</span><br></pre></td></tr></table></figure></li><li><p>下载一个edid文件用来模拟显示器以使得没有连接显示器的显卡可以被设置。</p></li><li><p>用<code>xconfig</code>生成<code>xorg.conf</code>文件(生成后位于<code>/etc/X11/</code>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-xconfig -a --cool-bits=28 --custom-edid=<span class="string">"DFP-0:&lt;path to edid file&gt;"</span> --connected-monitor=<span class="string">"DFP-0"</span> --no-use-display-device</span><br></pre></td></tr></table></figure></li><li><p>打开<code>/etc/X11/xorg.conf</code>文件，可以看到对应每块显卡，均生成了<code>Monitor</code>，<code>Device</code>，<code>Screen</code>三个Section，其中<code>Screen</code> Section如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Section &quot;Screen&quot;</span><br><span class="line">    Identifier     &quot;Screen1&quot;</span><br><span class="line">    Device         &quot;Device1&quot;</span><br><span class="line">    Monitor        &quot;Monitor1&quot;</span><br><span class="line">    DefaultDepth    24</span><br><span class="line">    Option         &quot;CustomEDID&quot; &quot;DFP-0:/etc/X11/delledid.bin&quot;</span><br><span class="line">    Option         &quot;ConnectedMonitor&quot; &quot;DFP-0&quot;</span><br><span class="line">    Option         &quot;UseDisplayDevice&quot; &quot;none&quot;</span><br><span class="line">    Option         &quot;Coolbits&quot; &quot;28&quot;</span><br><span class="line">    SubSection     &quot;Display&quot;</span><br><span class="line">        Depth       24</span><br><span class="line">    EndSubSection</span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure></li></ol><p>可以看到刚才设置的各个条目都在<code>Option</code>里面。找到并删除掉实际连接显示器的Section中除了<code>Coolbits</code>之外的其他<code>Option</code>。</p><ol start="5"><li>重启电脑。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装驱动&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
      <category term="Cuda" scheme="http://yoursite.com/categories/Linux/Cuda/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux下Transmission的“UDP Failed to set receive buffer”错误</title>
    <link href="http://yoursite.com/2018/07/09/Transmission-UDP-Failed-to-set-receive-buffer/"/>
    <id>http://yoursite.com/2018/07/09/Transmission-UDP-Failed-to-set-receive-buffer/</id>
    <published>2018-07-09T13:09:06.000Z</published>
    <updated>2022-10-01T08:54:06.002Z</updated>
    
    <content type="html"><![CDATA[<p>在Ubuntu 18.04的VPS上运行<code>transmission-daemon</code>报如下错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Jul 06 13:50:43 ubuntu-s-1vcpu-2gb-tor1-01 systemd[1]: Started Transmission BitTorrent Daemon.</span><br><span class="line">Jul 06 13:50:44 ubuntu-s-1vcpu-2gb-tor1-01 transmission-daemon[29663]: [2018-07-06 13:50:44.429] UDP Failed to set receive buffer: requested 4194304, got 425984 (tr-udp.c:84)</span><br><span class="line">Jul 06 13:50:44 ubuntu-s-1vcpu-2gb-tor1-01 transmission-daemon[29663]: [2018-07-06 13:50:44.430] UDP Failed to set send buffer: requested 1048576, got 425984 (tr-udp.c:95)</span><br><span class="line">Jul 06 13:50:44 ubuntu-s-1vcpu-2gb-tor1-01 transmission-daemon[29663]: [2018-07-06 13:50:44.430] UDP Failed to set receive buffer: requested 4194304, got 425984 (tr-udp.c:84)</span><br><span class="line">Jul 06 13:50:44 ubuntu-s-1vcpu-2gb-tor1-01 transmission-daemon[29663]: [2018-07-06 13:50:44.430] UDP Failed to set send buffer: requested 1048576, got 425984 (tr-udp.c:95)</span><br></pre></td></tr></table></figure></p><p>解决方案如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w net.core.rmem_max=8388608</span><br><span class="line">sysctl -w net.core.wmem_max=8388608</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Ubuntu 18.04的VPS上运行&lt;code&gt;transmission-daemon&lt;/code&gt;报如下错误：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
      <category term="应用软件" scheme="http://yoursite.com/categories/Linux/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>Nginx建立多个server</title>
    <link href="http://yoursite.com/2018/07/08/Nginx-setup-second-server/"/>
    <id>http://yoursite.com/2018/07/08/Nginx-setup-second-server/</id>
    <published>2018-07-08T08:53:39.000Z</published>
    <updated>2018-07-08T09:23:54.039Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>在<code>/etc/nginx/conf.d/</code>中添加<code>conf</code>文件，如<code>myblog.conf</code>，最简内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       &lt;port&gt;;</span><br><span class="line">    root  /var/www/myblog/;                 # root path</span><br><span class="line">    index index.html index.htm index.php;   # default page</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>检查<code>/etc/nginx/conf.d/download.conf</code>是否有<code>include /etc/nginx/conf.d/*.conf;</code>， 如果没有则添加。</p></li><li>运行<code>nginx -t</code>检查配置文件是否正确。</li><li><p>检查权限：</p><ol><li><p>查看运行nginx的用户:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep &quot;nginx: worker process&quot; | awk &apos;&#123;print $1&#125;&apos;</span><br></pre></td></tr></table></figure></li><li><p>对配置中的<code>root</code>目录，如上例中的<code>/var/www/myblog/</code>及其所有父目录和需要http访问的子目录，设置权限为755，对所有文件设为644。<em>（注意这里很多网上资料的解决方案是将nginx运行用户改为root用户，这样也能解决权限导致的403问题，但出于安全考虑不建议这样做。）</em></p></li></ol></li><li>访问http://&lt;ip address&gt;:&lt;port&gt; 检查配置的正确性。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;在&lt;code&gt;/etc/nginx/conf.d/&lt;/code&gt;中添加&lt;code&gt;conf&lt;/code&gt;文件，如&lt;code&gt;myblog.conf&lt;/code&gt;，最简内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;ta
      
    
    </summary>
    
      <category term="nginx" scheme="http://yoursite.com/categories/nginx/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux上使用ufw进行端口管理</title>
    <link href="http://yoursite.com/2018/07/05/Linux-UFW-Firewall/"/>
    <id>http://yoursite.com/2018/07/05/Linux-UFW-Firewall/</id>
    <published>2018-07-05T13:37:49.000Z</published>
    <updated>2018-07-08T09:22:16.248Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install ufw</span><br></pre></td></tr></table></figure><h3 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw enable</span><br></pre></td></tr></table></figure><h3 id="增加规则允许访问端口"><a href="#增加规则允许访问端口" class="headerlink" title="增加规则允许访问端口"></a>增加规则允许访问端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 80</span><br></pre></td></tr></table></figure><h3 id="删除规则允许访问端口"><a href="#删除规则允许访问端口" class="headerlink" title="删除规则允许访问端口"></a>删除规则允许访问端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw delete allow 80</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo静态博客系列之一——在VPS上搭建</title>
    <link href="http://yoursite.com/2018/07/03/Build-Hexo-blog/"/>
    <id>http://yoursite.com/2018/07/03/Build-Hexo-blog/</id>
    <published>2018-07-03T13:02:14.000Z</published>
    <updated>2018-07-03T12:50:52.894Z</updated>
    
    <content type="html"><![CDATA[<h3 id="本地部分"><a href="#本地部分" class="headerlink" title="本地部分"></a>本地部分</h3><ol><li><p>安装node.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -</span><br><span class="line">apt install nodejs -y</span><br></pre></td></tr></table></figure></li><li><p>安装Hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>初始化博客：</p><ol><li><p>使用</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog</span><br></pre></td></tr></table></figure><p> 创建<code>myblog</code>目录并在其中生成博客需要的基本文件。</p></li><li>初始化结束后，安装用于git部署的插件<code>hexo-deployer-git</code>和用于预览的本地server<code>hexo-serverfor</code>。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myblog</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-server</span><br></pre></td></tr></table></figure></li></ol></li><li><p>生成RSA密钥对用于与VPS之间的git验证</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -b 2048 -t rsa</span><br></pre></td></tr></table></figure></li></ol><h3 id="服务器部分"><a href="#服务器部分" class="headerlink" title="服务器部分"></a>服务器部分</h3><ol><li><p>安装Web Server服务，这里用nginx。参照<a href="http://nginx.org/en/linux_packages.html#stable" target="_blank" rel="noopener">官网</a>上的说明。</p></li><li><p>安装git：<code>apt install git</code></p></li><li><p>为git单独建立一个账户，在<code>$HOME</code>下建立<code>.ssh</code>目录并在其中建立<code>authorized_keys</code>文件，将之前生成的密钥对中的公钥粘贴到其中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br><span class="line">su git</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">mkdir .ssh</span><br><span class="line">vim .ssh/authorized_keys <span class="comment"># paste public key</span></span><br></pre></td></tr></table></figure></li><li><p>建立git裸仓库（bare repository）并设置一个钩子使得push进入裸仓库的文件自动复制到网站根目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init --bare blog.git</span><br><span class="line">vi blog.git/hooks/post-receive</span><br><span class="line">chmod +x blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure></li></ol><p><code>post-receive</code>文件的内容为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">git --work-tree=/var/www/html --git-dir=<span class="variable">$HOME</span>/blog.git checkout -f</span><br></pre></td></tr></table></figure></p><h3 id="返回本地部分"><a href="#返回本地部分" class="headerlink" title="返回本地部分"></a>返回本地部分</h3><ol><li><p>撰写第一篇博客</p><ol><li><p>在之前生成的myblog目录下运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new “helloworld”</span><br></pre></td></tr></table></figure><p>生成新文章模板，位于<code>/myblog/source/_posts/helloworld.md</code>。</p></li><li>在模板中填入内容</li><li>生成HTML<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure></li></ol></li><li><p>预览：<code>hexo server</code></p></li><li>部署：<br>在<code>_config.xml</code>文件中配置部署信息：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">   type: git</span><br><span class="line">   repo: git@&lt;server&gt;:&lt;path to bare repository&gt;</span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure></li></ol><p>之后<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p><p>即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;本地部分&quot;&gt;&lt;a href=&quot;#本地部分&quot; class=&quot;headerlink&quot; title=&quot;本地部分&quot;&gt;&lt;/a&gt;本地部分&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装node.js&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux Mint安装Cuda 9.1以及cuDNN、NICC</title>
    <link href="http://yoursite.com/2018/07/02/cuda-9-1-installation-on-linux-mint-with-cuDNN-and-NICC/"/>
    <id>http://yoursite.com/2018/07/02/cuda-9-1-installation-on-linux-mint-with-cuDNN-and-NICC/</id>
    <published>2018-07-02T13:02:10.000Z</published>
    <updated>2018-07-14T09:29:14.971Z</updated>
    
    <content type="html"><![CDATA[<h4 id="CUDA"><a href="#CUDA" class="headerlink" title="CUDA"></a>CUDA</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># execute following command as root user</span></span><br><span class="line">sudo -i</span><br><span class="line">dpkg -i cuda-repo-ubuntu1604_9.1.85-1_amd64.deb </span><br><span class="line">apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub</span><br><span class="line">apt update</span><br><span class="line">apt install cuda</span><br><span class="line">chmod a+x /usr/<span class="built_in">local</span>/cuda-9.1/bin/cuda-install-samples-9.1.sh</span><br><span class="line"><span class="comment"># install cuda sample dependencies</span></span><br><span class="line">apt install libgl-dev libglu-dev libx11-dev libegl1-mesa-dev libgles2-mesa-dev libmpich-dev</span><br><span class="line"><span class="comment"># back to normal user</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># install cuda examples</span></span><br><span class="line">cuda-install-samples-9.1.sh ./ </span><br><span class="line"><span class="comment"># force input macro value as linux mint is not officially supported</span></span><br><span class="line">GLPATH=<span class="string">"/usr/lib/x86_64-linux-gnu"</span> GLLINK=<span class="string">"-L/usr/lib/x86_64-linux-gnu"</span> DFLT_PATH=<span class="string">"/usr/lib"</span> EGLLIB=<span class="string">"/usr/lib/x86_64-linux-gnu"</span> GLESLIB=<span class="string">"/usr/lib/x86_64-linux-gnu"</span> make -j6</span><br></pre></td></tr></table></figure><h4 id="cuDNN"><a href="#cuDNN" class="headerlink" title="cuDNN"></a>cuDNN</h4><p>首先从<a href="https://developer.nvidia.com/rdp/cudnn-download" target="_blank" rel="noopener">https://developer.nvidia.com/rdp/cudnn-download</a></p><ul><li>cuDNN v7.0.5 Runtime Library for Ubuntu16.04 (Deb)</li><li>cuDNN v7.0.5 Developer Library for Ubuntu16.04 (Deb)</li><li>cuDNN v7.0.5 Code Samples and User Guide for Ubuntu16.04 (Deb)    </li></ul><p>接下来，安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i libcudnn7_7.0.5.15-1+cuda9.1_amd64.deb</span><br><span class="line">dpkg -i libcudnn7-dev_7.0.5.15-1+cuda9.1_amd64.deb</span><br><span class="line">dpkg -i libcudnn7-doc_7.0.5.15-1+cuda9.1_amd64.deb</span><br></pre></td></tr></table></figure></p><p>最后，运行官方测试用例以验证安装：</p><p>复制<code>/usr/src/cudnn_samples_v7/</code>到有写权限的目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> cudnn_samples_v7/mnistCUDNN/</span><br><span class="line">make</span><br></pre></td></tr></table></figure></p><h4 id="NICC"><a href="#NICC" class="headerlink" title="NICC"></a>NICC</h4><p>从<a href="https://developer.nvidia.com/nccl/nccl-download下载并" target="_blank" rel="noopener">https://developer.nvidia.com/nccl/nccl-download下载并</a> <code>dpkg</code> 安装。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i nccl-repo-ubuntu1604-2.1.15-ga-cuda9.1_1-1_amd64.deb</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;CUDA&quot;&gt;&lt;a href=&quot;#CUDA&quot; class=&quot;headerlink&quot; title=&quot;CUDA&quot;&gt;&lt;/a&gt;CUDA&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
      <category term="Cuda" scheme="http://yoursite.com/categories/Linux/Cuda/"/>
    
    
  </entry>
  
  <entry>
    <title>重命名Visual Studio项目</title>
    <link href="http://yoursite.com/2018/07/02/Rename-Visual-Studio-Project-name-checklist/"/>
    <id>http://yoursite.com/2018/07/02/Rename-Visual-Studio-Project-name-checklist/</id>
    <published>2018-07-02T13:02:08.000Z</published>
    <updated>2018-07-02T11:52:24.009Z</updated>
    
    <content type="html"><![CDATA[<p>因为Visual Stuido的主文件名和项目名以及一些依赖文件都是相互关联的，因此单单简单粗暴地重命名项目和源代码会导致编译错误。以下给出一个完美重命名VS项目的步骤检查表：</p><ol><li>在Visual Studio重命名项目；</li><li>重命名相关的源文件和头文件，并更正<code>#include</code>；</li><li>重命名<code>.sln</code>, .<code>vcpoj</code>和<code>.vcxpoj</code>文件；</li><li>将3中提到的三个文件（均为文本文件，可以用文本编辑器打开）中的旧名称替换为新名称。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为Visual Stuido的主文件名和项目名以及一些依赖文件都是相互关联的，因此单单简单粗暴地重命名项目和源代码会导致编译错误。以下给出一个完美重命名VS项目的步骤检查表：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在Visual Studio重命名项目；&lt;/li&gt;
&lt;li&gt;重命名相关
      
    
    </summary>
    
      <category term="Programming" scheme="http://yoursite.com/categories/Programming/"/>
    
      <category term="Visual Studio" scheme="http://yoursite.com/categories/Programming/Visual-Studio/"/>
    
    
  </entry>
  
  <entry>
    <title>apt提示key expired问题</title>
    <link href="http://yoursite.com/2018/07/02/apt-key-expired/"/>
    <id>http://yoursite.com/2018/07/02/apt-key-expired/</id>
    <published>2018-07-02T04:02:12.000Z</published>
    <updated>2018-07-02T12:04:33.280Z</updated>
    
    <content type="html"><![CDATA[<p>首先找出过期的key:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ apt-key list | grep expired</span><br><span class="line">pub   4096R/BE1DB1F1 2011-03-29 [expired: 2014-03-28]</span><br></pre></td></tr></table></figure></p><p>其中<font color="#0000ff">BE1DB1F1</font>就是key ID。</p><p>找到ID后即可用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --recv-keys --keyserver keys.gnupg.net BE1DB1F1</span><br></pre></td></tr></table></figure></p><p>更新key。</p><h5 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h5><p><a href="https://serverfault.com/questions/7145/what-should-i-do-when-i-got-the-keyexpired-error-message-after-an-apt-get-update/718435#718435" target="_blank" rel="noopener">https://serverfault.com/questions/7145/what-should-i-do-when-i-got-the-keyexpired-error-message-after-an-apt-get-update/718435#718435</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先找出过期的key:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>无损迁移Linux系统到新磁盘</title>
    <link href="http://yoursite.com/2018/07/01/Move-linux-to-new-disk/"/>
    <id>http://yoursite.com/2018/07/01/Move-linux-to-new-disk/</id>
    <published>2018-07-01T13:02:10.000Z</published>
    <updated>2018-07-01T03:06:17.065Z</updated>
    
    <content type="html"><![CDATA[<p>笔者的电脑原有一块SSD上装了Windows 10和Linux的双系统，其中Linux分配了大约300GB空间，但随着系统膨胀，发现空间逐步不够使用了，因此又买了一块1TB的SSD，打算将Linux整体迁移到1TB盘上，将原SSD上Linux部分都划给Windows 10。在此记录下迁移步骤，以供参考。<br>（此步骤基于Linux Mint，其他发行版应该大同小异。）</p><h4 id="迁移步骤"><a href="#迁移步骤" class="headerlink" title="迁移步骤"></a>迁移步骤</h4><ol><li>硬件安装；</li><li>刻录Linux安装U盘并以之启动电脑；</li><li><p>用<code>fdisk</code>命令分区，首先分2GBswap分区，其他作为迁移后的文件系统分区：</p><ol><li>用<code>fdisk -l</code>命令检查当前磁盘挂载和分区情况，找出并记录下原SSD上Linux的swap分区和文件系统分区，以及新SSD的挂载点，假设分别是<code>/dev/sda2</code>, <code>/dev/sda3</code>,和<code>/dev/sdd</code>；</li><li><p>用<code>fdisk /dev/sdd</code>给新磁盘分为swap分区和文件系统分区：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n <span class="comment"># create partition of 2GB for swap area</span></span><br><span class="line">Partition number (1-128, default 1): </span><br><span class="line">First sector (1-10000000, default 2048): </span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (34-2047, default 10000000): +2G</span><br><span class="line"></span><br><span class="line">Created a new partition 1 of <span class="built_in">type</span> <span class="string">'Linux filesystem'</span> and of size 2 GiB.</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n <span class="comment"># create partition with remaining space for main filesystem</span></span><br><span class="line">Partition number (2-128, default 2): </span><br><span class="line">First sector (600001-10000000): </span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (600002-10000000, default 10000000): </span><br><span class="line"></span><br><span class="line">Created a new partition 3 of <span class="built_in">type</span> <span class="string">'Linux filesystem'</span> and of size 600 GiB.</span><br></pre></td></tr></table></figure></li><li><p>再次<code>fdisk -l</code>查看新磁盘的分区，假设分别是<code>/dev/sdd1</code>和<code>/dev/sdd2</code>；</p></li><li>格式化新分区： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sdd1</span><br><span class="line">mkfs.ext4 /dev/sdd2</span><br></pre></td></tr></table></figure></li></ol></li></ol><ol start="3"><li><p>用<code>dd</code>命令复制旧SSD上Linux各分区到对应的新SSD分区上：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/sda2 of=/dev/sdd1</span><br><span class="line">dd <span class="keyword">if</span>=/dev/sda3 of=/dev/sdd2</span><br></pre></td></tr></table></figure><p> 取决于文件分区大小，复制可能需要数个小时。此外，如果之前<code>/boot</code>是单独挂载的，在步骤3也需要创建对应的分区并拷贝内容。</p></li><li><p>更新磁盘信息：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e2fsck -f /dev/sdd1</span><br><span class="line">resize2fs /dev/sdd1</span><br></pre></td></tr></table></figure></li><li><p>使用<code>gparted</code>更新磁盘的UUID。完成后对应更新<code>/etc/fstab</code>中关于Linux系统的分区UUID：</p><ul><li>使用<code>blkid /dev/sdd1</code>获得新磁盘上分区的UUID；</li><li>挂载新磁盘上的分区并更新位于<code>/&lt;mount dir&gt;/etc/fstab</code>为新UUID；</li><li>重启进入Windows 10，进入<code>管理工具-&gt;磁盘管理</code>，删除原SSD上的Linux分区；</li></ul></li><li><p>用Linux安装盘再次启动系统，用boot-repair修复grub；</p><ol><li><p>安装并打开boot-repair</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:yannubuntu/boot-repair</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y boot-repair</span><br><span class="line">boot-repair</span><br></pre></td></tr></table></figure></li><li><p>advanced mode选项卡中：</p><ul><li>“GRUB location”选项卡, 选中”Separate /boot/efi partition”，并选择Linux所在的分区。</li><li>“GRUB options”选项卡，选中”Purge GRUB before reinstalling it”。</li></ul></li></ol></li><li><p>重启，此时应该可以进入迁移后的Linux了。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;笔者的电脑原有一块SSD上装了Windows 10和Linux的双系统，其中Linux分配了大约300GB空间，但随着系统膨胀，发现空间逐步不够使用了，因此又买了一块1TB的SSD，打算将Linux整体迁移到1TB盘上，将原SSD上Linux部分都划给Windows 10。
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>个税改革分析，减税还是加税？</title>
    <link href="http://yoursite.com/2018/06/30/New-personal-tax/"/>
    <id>http://yoursite.com/2018/06/30/New-personal-tax/</id>
    <published>2018-06-30T02:32:49.000Z</published>
    <updated>2018-07-01T02:06:16.879Z</updated>
    
    <content type="html"><![CDATA[<p>   万众期待的个税改革草案昨天被发布出来征求公众意见，目前似乎讨论都只集中在起征点和级距上。然而，相比于另一个重大变化，也许起征点提高那么一点点的利得对于相当一部分人来说会被完全抵消。这个重大变化就是——年终奖要和工资合并计税了，从此以后年终奖的税是大大提高了的。。</p><p>为了仔细分析这一点的影响，先来看下目前的年终奖扣税规定：</p><p></p><p>以下内容引用自《国家税务总局关于调整个人取得全年一次性奖金等计算征收个人所得税方法问题的通知》（国税发〔2005〕9号）：</p><p></p><blockquote><br><dl><dt>二、纳税人取得全年一次性奖金，单独作为一个月工资、薪金所得计算纳税，并按以下计税办法，由扣缴义务人发放时代扣代缴：</dt><dd><dl><dt>(一) 先将雇员当月内取得的全年一次性奖金，除以12个月，按其商数确定适用税率和速算扣除数。</dt><dd>如果在发放年终一次性奖金的当月，雇员当月工资薪金所得低于税法规定的费用扣除额，应将全年一次性奖金减除“雇员当月工资薪金所得与费用扣除额的差额”后的余额，按上述办法确定全年一次性奖金的适用税率和速算扣除数。</dd><br><dt>(二) 将雇员个人当月内取得的全年一次性奖金，按本条第(一)项确定的适用税率和速算扣除数计算征税，计算公式如下：</dt><dd><ul><li>如果雇员当月工资薪金所得高于(或等于)税法规定的费用扣除额的，适用公式为：<br>应纳税额＝雇员当月取得全年一次性奖金×适用税率一速算扣除数</li><li>如果雇员当月工资薪金所得低于税法规定的费用扣除额的，适用公式为：<br>    应纳税额＝(雇员当月取得全年一次性奖金一雇员当月工资薪金所得与费用扣除额的差额)×适用税率一速算扣除数</li></ul></dd></dl></dd></dl><br></blockquote><p>因此目前年终奖税率和基本工资是基本没有关系的。而草案税制实施后，由于所有收入要“综合计税”并按年扣缴，所以年终奖的最低税率将变成基本工资的边际税率。</p><blockquote><br>    “（一）居民个人的综合所得，以每一纳税年度的收入额减除费用六万元以及专项扣除、专项附加扣除和依法确定的其他扣除后的余额，为应纳税所得额。专项扣除包括居民个人按照国家规定的范围和标准缴纳的基本养老保险、基本医疗保险、失业保险等社会保险费和住房公积金等；专项附加扣除包括子女教育、继续教育、大病医疗、住房贷款利息和住房租金等支出。<br></blockquote><p>因此，尽管草案税制起征点略有提高，并且级距稍有扩大，但其实对大多数中产的减税作用并没有想象得那么大，部分人甚至会被加税。</p><p>笔者试算了从年总收入1万到300万区间内草案税制的影响，结果如下图所示：<br><img src="/2018/06/30/New-personal-tax/taxchange.png" alt="2018个税草案影响"><br>图中左上为草案税制与现行税制需缴纳税款的差额；右上和左下分别为现行税制和草案税制下平均税负，即个税/总收入；右下为平均税负的变化。</p><p>试算基于如下假设：</p><ul><li>按帝都规定正常缴纳五险一金，帝都平均工资取最新公布8467元/月。正常情况下这个数字即将用于2018年7月到2019年6月社保基数计算。</li><li>只在一个单位取得工资奖金收入，没有其他需要“综合计税”的收入。</li><li>旧税率：<br>月标准扣除额3500元</li></ul><table><thead><tr><th>全月应纳税所得额（含税级距）</th><th>税率</th><th>速算扣除数 </th></tr></thead><tbody><tr><td>不超过1,500元</td><td>3%</td><td>0</td><td></td></tr><tr><td>超过1,500元至4,500元的部分</td><td>10%</td><td>105</td></tr><tr><td>超过4,500元至9,000元的部分</td><td>20%</td><td>555</td></tr><tr><td>超过9,000元至35,000元的部分</td><td>25%</td><td>1,005</td></tr><tr><td>超过35,000元至55,000元的部分</td><td>30%</td><td>2,755</td></tr><tr><td>超过55,000元至80,000元的部分</td><td>35%</td><td>5,505</td></tr><tr><td>超过80,000元的部分</td><td>45%</td><td>13,505 </td></tr></tbody></table><ul><li>草案税率：<br>年标准扣除额60000元</li></ul><table><thead><tr><th>全年应纳税所得额（含税级距）</th><th>税率</th><th>速算扣除数</th></tr></thead><tbody><tr><td>不超过36,000元</td><td>3%</td><td>0</td></tr><tr><td>超过36,000元至144,000元的部分</td><td>10%</td><td>2,520</td></tr><tr><td>超过144,000元至300,000元的部分</td><td>20%</td><td>16,920</td></tr><tr><td>超过300,000元至420,000元的部分</td><td>25%</td><td>31,920</td></tr><tr><td>超过420,000元至660,000元的部分</td><td>30%</td><td>52,920</td></tr><tr><td>超过660,000元至960,000元的部分</td><td>35%</td><td>85,920</td></tr><tr><td>超过960,000元的部分</td><td>45%</td><td>181,920</td></tr></tbody></table><p>可以看出，如果按照草案执行，收入在90-200万元，奖金占总收入比例在20%-60%（也就是年终奖为3-18个月月薪）的相对高收入中产是最不幸的，不但没有获得减税，反而被加了税，最高可能要多缴纳总收入4-5%的税。考虑到收入在250万以上的人群年终奖占比都会比较高，所以大部分真正高收入的人群，比如年薪几千万的某保险公司老总这种反而能获得一小点减税（至少不会被加税，虽然他们也不会在意这么几万元钱）。当然，一直宣传的给低收入群体减税也算是实现了吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;   万众期待的个税改革草案昨天被发布出来征求公众意见，目前似乎讨论都只集中在起征点和级距上。然而，相比于另一个重大变化，也许起征点提高那么一点点的利得对于相当一部分人来说会被完全抵消。这个重大变化就是——年终奖要和工资合并计税了，从此以后年终奖的税是大大提高了的。。&lt;/p
      
    
    </summary>
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>MFC</title>
    <link href="http://yoursite.com/2018/06/26/MFC/"/>
    <id>http://yoursite.com/2018/06/26/MFC/</id>
    <published>2018-06-26T13:02:16.000Z</published>
    <updated>2018-06-26T13:02:16.470Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Function-call-flow"><a href="#Function-call-flow" class="headerlink" title="Function call flow"></a>Function call flow</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CDialog::PreInitDialog()</span><br><span class="line">CDialog::HandleInitDialog(WPARAM, LPARAM)</span><br><span class="line">CDemoDlg::OnInitDialog()</span><br><span class="line">CDialog::CheckAutoCenter()</span><br><span class="line">CDialog::OnCmdMsg(nID, nCode, pExtra, pHandlerInfo);</span><br><span class="line">CDialog::PreTranslateMessage(pMsg)</span><br></pre></td></tr></table></figure><h3 id="Solve-“Opened-in-another-editor”-in-Resource-View"><a href="#Solve-“Opened-in-another-editor”-in-Resource-View" class="headerlink" title="Solve “Opened in another editor” in Resource View"></a>Solve “Opened in another editor” in Resource View</h3><p>Close “Resource.h” and all “.rc” file. Then shrink and re-expand the “rc” folder in Resource View.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Function-call-flow&quot;&gt;&lt;a href=&quot;#Function-call-flow&quot; class=&quot;headerlink&quot; title=&quot;Function call flow&quot;&gt;&lt;/a&gt;Function call flow&lt;/h3&gt;&lt;figure c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于减轻功夫墙（GFW）造成的不便的一些探讨</title>
    <link href="http://yoursite.com/2018/06/26/About-GongFu-Wall/"/>
    <id>http://yoursite.com/2018/06/26/About-GongFu-Wall/</id>
    <published>2018-06-26T13:02:15.000Z</published>
    <updated>2018-06-29T23:53:27.946Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用gooreplacer重定向对Google的访问"><a href="#使用gooreplacer重定向对Google的访问" class="headerlink" title="使用gooreplacer重定向对Google的访问"></a>使用gooreplacer重定向对Google的访问</h3><p>　　众所周知，天朝无法访问任何Google的服务。但不幸很多外国网站，如码农必备的Stackoverflow等都会调用Google的API，这就导致了这些网站访问速度巨慢，功能不全等问题。在网上发现了有人开发的关于可以重定向Google API到国内镜像的插件，可以用于Firefox和Google Chrome上。特记录于此：<br>插件地址：<a href="https://github.com/jiacai2050/gooreplacer" target="_blank" rel="noopener">https://github.com/jiacai2050/gooreplacer</a><br>如果只需要重定向Google的访问，可以复制如下Rules，保存为.gson格式后导入。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&#123;        </span><br><span class="line">    &quot;createBy&quot;: &quot;http://liujiacai.net/gooreplacer/&quot;,</span><br><span class="line">    &quot;createAt&quot;: &quot;Tue Jan 10 2017 17:45:39 GMT+0000&quot;,</span><br><span class="line">    &quot;rules&quot;: &#123;</span><br><span class="line">        &quot;ajax.googleapis.com&quot;: &#123;</span><br><span class="line">            &quot;dstURL&quot;: &quot;ajax.proxy.ustclug.org&quot;,</span><br><span class="line">            &quot;kind&quot;: &quot;wildcard&quot;,</span><br><span class="line">            &quot;enable&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;storage.googleapis.com&quot;: &#123;</span><br><span class="line">            &quot;dstURL&quot;: &quot;storage-googleapis.proxy.ustclug.org&quot;,</span><br><span class="line">            &quot;kind&quot;: &quot;wildcard&quot;,</span><br><span class="line">            &quot;enable&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;gerrit.googlesource.com&quot;: &#123;</span><br><span class="line">            &quot;dstURL&quot;: &quot;gerrit-googlesource.proxy.ustclug.org&quot;,</span><br><span class="line">            &quot;kind&quot;: &quot;wildcard&quot;,</span><br><span class="line">            &quot;enable&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;themes.googleusercontent.com&quot;: &#123;</span><br><span class="line">            &quot;dstURL&quot;: &quot;google-themes.proxy.ustclug.org&quot;,</span><br><span class="line">            &quot;kind&quot;: &quot;wildcard&quot;,</span><br><span class="line">            &quot;enable&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;platform.twitter.com/widgets.js&quot;: &#123;</span><br><span class="line">            &quot;dstURL&quot;: &quot;cdn.rawgit.com/jiacai2050/gooreplacer/gh-pages/proxy/widgets.js&quot;,</span><br><span class="line">            &quot;kind&quot;: &quot;wildcard&quot;,</span><br><span class="line">            &quot;enable&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;apis.google.com/js/api.js&quot;: &#123;</span><br><span class="line">            &quot;dstURL&quot;: &quot;cdn.rawgit.com/jiacai2050/gooreplacer/gh-pages/proxy/api.js&quot;,</span><br><span class="line">            &quot;kind&quot;: &quot;wildcard&quot;,</span><br><span class="line">            &quot;enable&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;apis.google.com/js/plusone.js&quot;: &#123;</span><br><span class="line">            &quot;dstURL&quot;: &quot;cdn.rawgit.com/jiacai2050/gooreplacer/gh-pages/proxy/plusone.js&quot;,</span><br><span class="line">            &quot;kind&quot;: &quot;wildcard&quot;,</span><br><span class="line">            &quot;enable&quot;: true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>目前该插件存在一点问题，就是配置是基于Cookies保存的，如果浏览器设置了隐私模式或清除了Cookies，配置会丢失。</p><h3 id="Use-PAC-list-for-ss"><a href="#Use-PAC-list-for-ss" class="headerlink" title="Use PAC list for ss"></a>Use PAC list for ss</h3><ol><li><p>Install GenPAC (reference <a href="https://github.com/JinnLynn/GenPAC" target="_blank" rel="noopener">https://github.com/JinnLynn/GenPAC</a>)</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install genpac</span><br></pre></td></tr></table></figure></li><li><p>Download url list</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genpac --pac-proxy <span class="string">"SOCKS5 127.0.0.1:1080"</span> --gfwlist-proxy=<span class="string">"SOCKS5 127.0.0.1:1080"</span> --output=<span class="string">"mypac.pac"</span></span><br></pre></td></tr></table></figure></li><li><p>Setup global proxy in system</p></li></ol><p><img src="https://note.youdao.com/yws/public/resource/d7098784592b6d9090942f083ef9167b/xmlnote/WEBRESOURCEe496e589eb4c6a1a2889fb66a36ea602/530" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;使用gooreplacer重定向对Google的访问&quot;&gt;&lt;a href=&quot;#使用gooreplacer重定向对Google的访问&quot; class=&quot;headerlink&quot; title=&quot;使用gooreplacer重定向对Google的访问&quot;&gt;&lt;/a&gt;使用goorep
      
    
    </summary>
    
    
      <category term="GFW, gooreplacer, ss" scheme="http://yoursite.com/tags/GFW-gooreplacer-ss/"/>
    
  </entry>
  
  <entry>
    <title>Tesseract</title>
    <link href="http://yoursite.com/2018/06/26/Tesseract/"/>
    <id>http://yoursite.com/2018/06/26/Tesseract/</id>
    <published>2018-06-26T13:02:15.000Z</published>
    <updated>2018-06-26T13:02:15.882Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h4 id="1-Required-package"><a href="#1-Required-package" class="headerlink" title="1. Required package"></a>1. Required package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install autoconf-archive automake g++ libtool make pkg-config <span class="comment"># for main recognization</span></span><br><span class="line">apt install asciidoc <span class="comment"># for document</span></span><br><span class="line">apt-get install libicu-dev libpango1.0-dev libcairo2-dev <span class="comment"># for training tool</span></span><br></pre></td></tr></table></figure><h5 id="1-1-Build-libleptonica-dev-from-source"><a href="#1-1-Build-libleptonica-dev-from-source" class="headerlink" title="1.1 Build libleptonica-dev from source"></a>1.1 Build libleptonica-dev from source</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo -i <span class="comment"># build as root</span></span><br><span class="line">wget http://www.leptonica.org/<span class="built_in">source</span>/leptonica-1.76.0.tar.gz <span class="comment"># check http://www.leptonica.org/download.html for latest version</span></span><br><span class="line">tar -xzf leptonica-1.76.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> leptonica-1.76.0/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h4 id="2-Clone-tesseract-from-github"><a href="#2-Clone-tesseract-from-github" class="headerlink" title="2. Clone tesseract from github"></a>2. Clone tesseract from github</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/tesseract-ocr/tesseract.git tesseract</span><br></pre></td></tr></table></figure><h4 id="3-Build-as-non-root-user"><a href="#3-Build-as-non-root-user" class="headerlink" title="3. Build as non-root user"></a>3. Build as non-root user</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./autogen.sh</span><br><span class="line">./configure --prefix=<span class="variable">$HOME</span>/tesseract/bin/</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h4 id="4-Build-training-tool"><a href="#4-Build-training-tool" class="headerlink" title="4. Build training tool"></a>4. Build training tool</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make training</span><br><span class="line">make training-install</span><br></pre></td></tr></table></figure><h4 id="5-Get-trained-data"><a href="#5-Get-trained-data" class="headerlink" title="5. Get trained data"></a>5. Get trained data</h4><p>Download required language from <a href="https://github.com/tesseract-ocr/tesseract/wiki/Data-Files" target="_blank" rel="noopener">https://github.com/tesseract-ocr/tesseract/wiki/Data-Files</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h2&gt;&lt;h4 id=&quot;1-Required-package&quot;&gt;&lt;a href=&quot;#1-Required-pack
      
    
    </summary>
    
    
  </entry>
  
</feed>
